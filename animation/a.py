# Autogenerated with SMOP version 
# /Users/norman/.virtualenvs/cv/bin/smop CrossCorrelation.m

from __future__ import division
try:
    from runtime import *
except ImportError:
    from smop.runtime import *

#clc
#close(char('all'))
#clear(char('all'))
iteration=176
fs=10000
t=arange_(- 1,1,1 / fs)
iterationSteps=arange_(1,iteration,1)
crossCorrelation=zeros(1,iteration)
convolution=zeros(1,iteration)
_set(gcf,char('Color'),[1,1,1])
disp(char('Let y1 and y2 to be defined as following figures:'))
disp(char('============================================================'))
y1=rectpuls(t,1)
y2=tripuls(t,0.5,- 1)
subplot(4,2,1)
plot(t,y1,char('Color'),char('blue'),char('LineWidth'),2)
axis([- 1,1,- 0.2,1.2])
ylabel(char('y1'))
subplot(4,2,2)
plot(t,y2,char('Color'),char('red'),char('LineWidth'),2)
axis([- 1,1,- 0.2,1.2])
ylabel(char('y2'))
disp(char('Press Enter to continue ....'))
pause
disp(char(' '))
disp(char(' '))
disp(char('Cross Correlation of two signals (y1 and y2):'))
disp(char('============================================================'))
for i in arange_(1,iteration).reshape(-1):
    moveStep=(i - 100) / 100
    y1=rectpuls(t,1)
    y2=tripuls(t - moveStep,0.5,- 1)
    subplot(4,2,arange_(3,4))
    hold(char('off'))
    plot(t,y1,char('Color'),char('blue'),char('LineWidth'),2)
    axis([- 1,1,- 0.2,1.2])
    hold(char('on'))
    plot(t,y2,char('Color'),char('red'),char('LineWidth'),2)
    axis([- 1,1,- 0.2,1.2])
    crossCorrelation[i]=_sum(y1.dot(y2))
    subplot(4,2,arange_(5,6))
    hold(char('off'))
    plot(iterationSteps(arange_(1,i)),crossCorrelation(arange_(1,i)),char('Color'),char('black'),char('LineWidth'),2)
    axis([1,iteration,- 100,3100.0])
    xlabel(char('t'))
    ylabel(char('CrossCorrelation(y1, y2)(t) '))
    pause(0.05)
disp(char('Press Enter to continue ....'))
pause
disp(char(' '))
disp(char(' '))
disp(char('Convolution of two signals (y1 and y2):'))
disp(char('============================================================'))
for i in arange_(1,iteration).reshape(-1):
    moveStep=(i - 100) / 100
    y1=rectpuls(t,1)
    y2=tripuls(- (t - moveStep),0.5,- 1)
    subplot(4,2,arange_(3,4))
    hold(char('off'))
    plot(t,y1,char('Color'),char('blue'),char('LineWidth'),2)
    axis([- 1,1,- 0.2,1.2])
    hold(char('on'))
    plot(t,y2,char('Color'),char('red'),char('LineWidth'),2)
    axis([- 1,1,- 0.2,1.2])
    convolution[i]=_sum(y1.dot(y2))
    subplot(4,2,arange_(7,8))
    hold(char('off'))
    plot(iterationSteps(arange_(1,i)),convolution(arange_(1,i)),char('Color'),char('black'),char('LineWidth'),2)
    axis([1,iteration,- 100,3100.0])
    xlabel(char('t'))
    ylabel(char('(y1 * y2)(t) '))
    pause(0.05)
